<?php

$upload_max_filesize = ini_get('upload_max_filesize') !== null ? return_bytes(ini_get('upload_max_filesize')) : 0;
$post_max_filesize = ini_get('post_max_filesize') !== null ? return_bytes(ini_get('post_max_filesize')) : 0;

return [
    'debug' => true,
    'database' => [
        'type' => 'mysql',
        'host' => '127.0.0.1',
        'port' => 3306,
        'socket' => '/var/run/mysqld/mysqld.sock',
        'database' => '#mysql_db',
        'username' => '#mysql_user',
        'password' => '#mysql_pass',
        'charset' => 'utf8mb4',
        'use_socket' => false,
        'query_limit' => 65536,
    ],
    'cache' => [
        'driver' => 'file',
        'prefix' => '#cookie_prefix',
    ],
    'redis' => [
        'host' => '127.0.0.1',
        'password' => null,
        'port' => 6379,
        'database' => 1,
        'socket' => '/dev/shm/redis.sock',
        'use_socket' => false,
    ],
    'files' => [
        'path' => '/dev/shm/master',
    ],
    'memcached' => [
        'host' => '127.0.0.1',
        'port' => 11211,
        'socket' => '/dev/shm/memcached.sock',
        'use_socket' => false,
    ],
    'paths' => [
        'flood_file' => INCL_DIR . 'settings' . DIRECTORY_SEPARATOR . 'limitfile.txt',
        'nameblacklist' => CACHE_DIR . 'nameblacklist.txt',
        'happyhour' => CACHE_DIR . 'happyhour.cache',
        'sql_error_log' => SQLERROR_LOGS_DIR . 'sql_err_' . date('Y_m_d', TIME_NOW) . '.log',
        'baseurl' => get_scheme() . '://' . (!empty($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : '#baseurl'),
        'images_baseurl' => '.' . DIRECTORY_SEPARATOR . 'images' . DIRECTORY_SEPARATOR,
    ],
    'bucket' => [
        'maxsize' => $upload_max_filesize >= $post_max_filesize ? $upload_max_filesize : $post_max_filesize,
    ],
];
